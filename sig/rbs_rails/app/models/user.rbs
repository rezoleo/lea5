class User < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor firstname(): String
  def firstname_changed?: () -> bool
  def firstname_change: () -> [ String?, String? ]
  def firstname_will_change!: () -> void
  def firstname_was: () -> String?
  def firstname_previously_changed?: () -> bool
  def firstname_previous_change: () -> Array[String?]?
  def firstname_previously_was: () -> String?
  def firstname_before_last_save: () -> String?
  def firstname_change_to_be_saved: () -> Array[String?]?
  def firstname_in_database: () -> String?
  def saved_change_to_firstname: () -> Array[String?]?
  def saved_change_to_firstname?: () -> bool
  def will_save_change_to_firstname?: () -> bool
  def restore_firstname!: () -> void
  def clear_firstname_change: () -> void

  attr_accessor lastname(): String
  def lastname_changed?: () -> bool
  def lastname_change: () -> [ String?, String? ]
  def lastname_will_change!: () -> void
  def lastname_was: () -> String?
  def lastname_previously_changed?: () -> bool
  def lastname_previous_change: () -> Array[String?]?
  def lastname_previously_was: () -> String?
  def lastname_before_last_save: () -> String?
  def lastname_change_to_be_saved: () -> Array[String?]?
  def lastname_in_database: () -> String?
  def saved_change_to_lastname: () -> Array[String?]?
  def saved_change_to_lastname?: () -> bool
  def will_save_change_to_lastname?: () -> bool
  def restore_lastname!: () -> void
  def clear_lastname_change: () -> void

  attr_accessor email(): String
  def email_changed?: () -> bool
  def email_change: () -> [ String?, String? ]
  def email_will_change!: () -> void
  def email_was: () -> String?
  def email_previously_changed?: () -> bool
  def email_previous_change: () -> Array[String?]?
  def email_previously_was: () -> String?
  def email_before_last_save: () -> String?
  def email_change_to_be_saved: () -> Array[String?]?
  def email_in_database: () -> String?
  def saved_change_to_email: () -> Array[String?]?
  def saved_change_to_email?: () -> bool
  def will_save_change_to_email?: () -> bool
  def restore_email!: () -> void
  def clear_email_change: () -> void

  attr_accessor room(): String
  def room_changed?: () -> bool
  def room_change: () -> [ String?, String? ]
  def room_will_change!: () -> void
  def room_was: () -> String?
  def room_previously_changed?: () -> bool
  def room_previous_change: () -> Array[String?]?
  def room_previously_was: () -> String?
  def room_before_last_save: () -> String?
  def room_change_to_be_saved: () -> Array[String?]?
  def room_in_database: () -> String?
  def saved_change_to_room: () -> Array[String?]?
  def saved_change_to_room?: () -> bool
  def will_save_change_to_room?: () -> bool
  def restore_room!: () -> void
  def clear_room_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  def machines: () -> Machine::ActiveRecord_Associations_CollectionProxy
  def machines=: (Machine::ActiveRecord_Associations_CollectionProxy | Array[Machine]) -> (Machine::ActiveRecord_Associations_CollectionProxy | Array[Machine])
  def machine_ids: () -> Array[Integer]
  def machine_ids=: (Array[Integer]) -> Array[Integer]

  class ActiveRecord_Relation < ActiveRecord::Relation
    include _ActiveRecord_Relation[User, Integer]
    include Enumerable[User]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  end
end
