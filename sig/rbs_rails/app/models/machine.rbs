class Machine < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Machine, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor name(): String
  def name_changed?: () -> bool
  def name_change: () -> [ String?, String? ]
  def name_will_change!: () -> void
  def name_was: () -> String?
  def name_previously_changed?: () -> bool
  def name_previous_change: () -> Array[String?]?
  def name_previously_was: () -> String?
  def name_before_last_save: () -> String?
  def name_change_to_be_saved: () -> Array[String?]?
  def name_in_database: () -> String?
  def saved_change_to_name: () -> Array[String?]?
  def saved_change_to_name?: () -> bool
  def will_save_change_to_name?: () -> bool
  def restore_name!: () -> void
  def clear_name_change: () -> void

  attr_accessor mac(): untyped
  def mac_changed?: () -> bool
  def mac_change: () -> [ untyped?, untyped? ]
  def mac_will_change!: () -> void
  def mac_was: () -> untyped?
  def mac_previously_changed?: () -> bool
  def mac_previous_change: () -> Array[untyped?]?
  def mac_previously_was: () -> untyped?
  def mac_before_last_save: () -> untyped?
  def mac_change_to_be_saved: () -> Array[untyped?]?
  def mac_in_database: () -> untyped?
  def saved_change_to_mac: () -> Array[untyped?]?
  def saved_change_to_mac?: () -> bool
  def will_save_change_to_mac?: () -> bool
  def restore_mac!: () -> void
  def clear_mac_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor user_id(): Integer
  def user_id_changed?: () -> bool
  def user_id_change: () -> [ Integer?, Integer? ]
  def user_id_will_change!: () -> void
  def user_id_was: () -> Integer?
  def user_id_previously_changed?: () -> bool
  def user_id_previous_change: () -> Array[Integer?]?
  def user_id_previously_was: () -> Integer?
  def user_id_before_last_save: () -> Integer?
  def user_id_change_to_be_saved: () -> Array[Integer?]?
  def user_id_in_database: () -> Integer?
  def saved_change_to_user_id: () -> Array[Integer?]?
  def saved_change_to_user_id?: () -> bool
  def will_save_change_to_user_id?: () -> bool
  def restore_user_id!: () -> void
  def clear_user_id_change: () -> void

  def ip: () -> Ip
  def ip=: (Ip?) -> Ip?
  def build_ip: (untyped) -> Ip
  def create_ip: (untyped) -> Ip
  def create_ip!: (untyped) -> Ip
  def reload_ip: () -> Ip?
  def user: () -> User
  def user=: (User?) -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  def reload_user: () -> User?

  class ActiveRecord_Relation < ActiveRecord::Relation
    include _ActiveRecord_Relation[Machine, Integer]
    include Enumerable[Machine]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  end
end
