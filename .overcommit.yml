# Use this file to configure the Overcommit hooks you wish to use. This will
# extend the default configuration defined in:
# https://github.com/sds/overcommit/blob/master/config/default.yml
#
# At the topmost level of this YAML file is a key representing type of hook
# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can
# customize each hook, such as whether to only run it on certain files (via
# `include`), whether to only display output if it fails (via `quiet`), etc.
#
# For a complete list of hooks, see:
# https://github.com/sds/overcommit/tree/master/lib/overcommit/hook
#
# For a complete list of options that you can use to customize hooks, see:
# https://github.com/sds/overcommit#configuration
#
# Uncomment the following lines to make the configuration take effect.

gemfile: Gemfile

PreCommit:
  RuboCop:
    enabled: true
    on_warn: fail # Treat all warnings as failures
  FixMe:
    enabled: true
  RailsSchemaUpToDate:
    enabled: true
  AuthorEmail:
    enabled: true
    on_fail: warn
  AuthorName:
    enabled: true
    on_fail: warn

  EnsureStrictLocals:
    enabled: true
    description: 'Check for strict locals in partials'
    include:
      - 'app/views/**/*.erb'
      - 'app/views/**/*.jbuilder'
#  TrailingWhitespace:
#    enabled: true
#    exclude:
#      - '**/db/structure.sql' # Ignore trailing whitespace in generated files

CommitMsg:
  CapitalizedSubject:
    enabled: false

  MessageFormat:
    enabled: true
    description: 'Ensure commit message follows commit style'
    on_fail: warn
    pattern: '^(build|ci|docs|feat|fix|perf|refactor|style|test)(\(.+\))?: .{1,50}'
    expected_pattern_message: '<build|ci|docs|feat|fix|perf|refactor|style|test>(<scope>): <message>'
    sample_message: 'ci(rubocop): increase class length limit'

  TextWidth:
    enabled: true
    max_subject_width: 80

PrePush:
  Brakeman:
    enabled: true


#PostCheckout:
#  ALL: # Special hook name that customizes all hooks of this type
#    quiet: true # Change all post-checkout hooks to only display output on failure
#  IndexTags:
#    enabled: true # Generate a tags file with `ctags` each time HEAD changes
